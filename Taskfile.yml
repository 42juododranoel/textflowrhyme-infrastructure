version: "3"

tasks:
  # Convenience

  install:taskfile:
    cmds:
      - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
  
  install:ssh:
    cmds:
      - ssh-keygen -f ~/.ssh/textflowrhyme
      - cat ~/.ssh/textflowrhyme.pub
      - echo "Add this key to DigitalOcean now and name it 'textflowrhyme'"

  install:terraform:
    cmds:
      - sudo apt update && sudo apt install -y gnupg software-properties-common
      - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
      - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
      - |
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
        https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list
      - sudo apt update && sudo apt install terraform

  install:ansible:
    cmds:
      - sudo apt install ansible
  
  install:docker:
    cmds:
      - sudo apt install apt-transport-https ca-certificates curl gnupg software-properties-common
      - sudo install -m 0755 -d /etc/apt/keyrings
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - sudo chmod a+r /etc/apt/keyrings/docker.gpg
      - |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - sudo apt update
      - sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  generate-traefik-password:
    cmds:
      - htpasswd -nBC 10 {{ .CLI_ARGS }}

  # Maintenance

  terraform:apply:
    cmds:
      - |
        while true; do
            read -p "Have you uploaded 'textflowrhyme' SSH key to DigitalOcean? (yes/no) " yn
            case $yn in
                [Yy]* ) break;;
                [Nn]* ) exit 1;;
                * ) echo "Please answer yes or no.";;
            esac
        done
      - terraform apply -var-file=.tfvars
      - echo "Copy your dropletâ€™s IP to your Ansible inventory"
    dir: ./terraform

  terraform:destroy:
    cmds:
      - terraform destroy -var-file=.tfvars
    dir: ./terraform

  ansible:install:
    cmds:
      - ansible-playbook -i inventory.yml playbooks/install.yml
      - echo "Now manually set .env values"
    dir: ./ansible

  docker:restart:
    cmds:
      - docker compose pull
      - docker compose up -d
      - docker system prune --volumes -af
