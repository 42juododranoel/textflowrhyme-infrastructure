version: '3'

services:
  postgres:
    image: postgres:alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
    user: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_DATABASE_BACKEND}
    volumes:
      - ./docker/postgres/:/docker-entrypoint-initdb.d:ro

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
    command: redis-server --save 60 1 --loglevel warning

  backend:
    image: 42juododranoel/textflowrhyme-backend:latest
    command: start:deployment
    labels:
      traefik.enable: true
      traefik.http.services.backend.loadbalancer.server.port: 8000
      #
      traefik.http.routers.backend.rule: Host(`backend.${DOMAIN}`)
      traefik.http.routers.backend.entrypoints: https
      traefik.http.routers.backend.tls: true
      traefik.http.routers.backend.tls.certresolver: ${TRAEFIK_CERT_RESOLVER}

  frontend:
    image: 42juododranoel/textflowrhyme-frontend:latest
    command: start:deployment
    labels:
      traefik.enable: true
      traefik.http.services.frontend.loadbalancer.server.port: 3000
      #
      traefik.http.routers.frontend.rule: Host(`${DOMAIN}`)
      traefik.http.routers.frontend.entrypoints: https
      traefik.http.routers.frontend.tls: true
      traefik.http.routers.frontend.tls.certresolver: ${TRAEFIK_CERT_RESOLVER}

  traefik:
    image: traefik:2.10.7
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --api=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: ${TRAEFIK_CERT_RESOLVER}
      traefik.http.routers.traefik.middlewares: auth
      traefik.http.routers.traefik.service: api@internal
      #
      traefik.http.routers.https-redirect.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.https-redirect.entrypoints: http
      traefik.http.routers.https-redirect.middlewares: https-redirect
      #
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.auth.basicauth.users: ${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
