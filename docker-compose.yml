version: '3'

services:
  backend:
    image: 42juododranoel/textflowrhyme-backend:latest
    command: start:deployment

  frontend:
    image: 42juododranoel/textflowrhyme-frontend:latest
    command: start:deployment
    labels:
      traefik.http.routers.frontend.rule: Host(`${DOMAIN}`)
      traefik.http.routers.frontend.entrypoints: https
      traefik.http.routers.frontend.tls: true
      traefik.http.routers.frontend.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.services.frontend.loadbalancer.server.port: 3000
  
  traefik:
    image: traefik:2.4.8
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --api=true
      - --providers.docker=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.traefik.middlewares: auth
      traefik.http.routers.traefik.service: api@internal
      #
      traefik.http.middlewares.to-https.redirectscheme.scheme: https
      traefik.http.middlewares.auth.basicauth.users: ${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
      #
      traefik.http.routers.to-https.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.to-https.entrypoints: http
      traefik.http.routers.to-https.middlewares: to-https
